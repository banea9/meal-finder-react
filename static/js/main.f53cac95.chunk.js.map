{"version":3,"sources":["components/Header/Header.js","components/InputForm/InputForm.js","components/SearchValueParagraph/SearchValueParagraph.js","components/Meal/Meal.js","components/MealGrid/MealGrid.js","components/Ingredients/Ingredients.js","components/MealDetails/MealDetails.js","containers/App/App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["Header","className","InputForm","onSearchChange","onMealSearch","onRandomSearch","aria-label","id","onChange","type","placeholder","onClick","SearchValueParagraph","searchValue","meals","Meal","viewMealDetails","image","name","src","alt","data-id","MealGrid","map","meal","key","idMeal","strMealThumb","strMeal","Ingredients","ingredientsList","ingredients","ing","i","split","ingr","amount","style","display","margin","padding","backgroundColor","color","width","listStyle","MealDetails","mealDetails","photoSrc","height","category","area","instructions","href","video","target","rel","textDecoration","App","this","props","onRequestMeal","searchField","onRequestRandomMeal","onRequestViewMeal","undefined","Component","connect","state","searchMeals","requestMeal","randomMeal","isPending","error","requestViewMeal","dispatch","event","payload","value","getState","fetch","then","resp","json","data","catch","err","mealID","getAttribute","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initalStateSearch","initalStateRequestMeal","initalStateViewMeal","logger","createLogger","rootReducer","combineReducers","action","Object","assign","ingredientsArr","push","strCategory","strArea","strInstructions","strYoutube","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f53cac95.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return <h1 className=\"tc\">Meal Finder App</h1>;\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./InputForm.css\";\nconst InputForm = ({ onSearchChange, onMealSearch, onRandomSearch }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"search\">\n        <input\n          aria-label=\"Searching Meals\"\n          id=\"searchInput\"\n          onChange={onSearchChange}\n          type=\"text\"\n          placeholder=\"Search for meals\"\n        />\n\n        <button\n          aria-label=\"search-btn\"\n          onClick={onMealSearch}\n          className=\"search-btn\"\n        >\n          <i className=\"fas fa-search\"></i>\n        </button>\n      </div>\n      <button\n        aria-label=\"random-btn\"\n        onClick={onRandomSearch}\n        className=\"random-btn\"\n      >\n        <i className=\"fas fa-random\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default InputForm;\n","import React from \"react\";\n\nconst SearchValueParagraph = ({ searchValue, meals }) => {\n  if (meals === null) {\n    return <p className=\"f3 mv3\">No results found, try again...</p>;\n  }\n  return <p className=\"f3 mv3\">Searching for \"{searchValue}\"</p>;\n};\n\nexport default SearchValueParagraph;\n","import React from \"react\";\nimport \"./Meal.css\";\nconst Meal = ({ id, viewMealDetails, image, name }) => {\n  return (\n    <div className=\"meal\" onClick={viewMealDetails}>\n      <img src={image} alt={name} />\n      <div className=\"meal-info\" data-id={`${id}`}>\n        {name}\n      </div>\n    </div>\n  );\n};\n\nexport default Meal;\n","import React from \"react\";\nimport Meal from \"../Meal/Meal\";\nimport \"./MealGrid.css\";\n\nconst MealGrid = ({ meals, viewMealDetails }) => {\n  return (\n    <div className=\"meal-grid\">\n      {meals !== null\n        ? meals.map(meal => {\n            return (\n              <Meal\n                key={meal.idMeal}\n                id={meal.idMeal}\n                viewMealDetails={viewMealDetails}\n                image={meal.strMealThumb}\n                name={meal.strMeal}\n              />\n            );\n          })\n        : null}\n    </div>\n  );\n};\n\nexport default MealGrid;\n","import React from \"react\";\n\nconst Ingredients = ({ ingredients }) => {\n  let ingredientsList;\n  if (ingredients) {\n    ingredientsList = ingredients.map((ing, i) => {\n      let [ingr, amount] = ing.split(\" - \");\n      return (\n        <li\n          className=\"list-item br3 bn\"\n          style={{\n            display: \"inline-block\",\n            margin: \"3px\",\n            padding: \"3px 5px\",\n            backgroundColor: \"#fff\",\n            color: \"#000\"\n          }}\n          key={i}\n        >\n          {ingr}: {amount}\n        </li>\n      );\n    });\n  }\n\n  return (\n    <div>\n      <ul\n        className=\"mv3\"\n        style={{ width: \"70%\", listStyle: \"none\", margin: \"10px auto\" }}\n      >\n        {ingredientsList}\n      </ul>\n    </div>\n  );\n};\n\nexport default Ingredients;\n","import React from \"react\";\nimport \"./MealDetails.css\";\nimport Ingredients from \"../Ingredients/Ingredients\";\nconst MealDetails = ({ mealDetails }) => {\n  return (\n    <div className=\"tc meal-desc\">\n      <h1 className=\"f2 tc\">{mealDetails.name}</h1>\n      <img src={mealDetails.photoSrc} width=\"350px\" height=\"350px\" alt=\"asd\" />\n      <div className=\"desc tc f3 ph4 pv3 br3 ba b--dashed bw2\">\n        <h2>{mealDetails.category}</h2>\n        <h4>{mealDetails.area}</h4>\n      </div>\n      <div className=\"instructions f4\">{mealDetails.instructions}</div>\n      <Ingredients ingredients={mealDetails.ingredients} />\n      <a\n        href={mealDetails.video}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"f3 mv3\"\n        style={{ textDecoration: \"none\", color: \"#bd8532\" }}\n      >\n        Video preparation\n      </a>\n    </div>\n  );\n};\n\nexport default MealDetails;\n","import React, { Component } from \"react\";\nimport Header from \"../../components/Header/Header\";\nimport InputForm from \"../../components/InputForm/InputForm\";\nimport SearchValueParagraph from \"../../components/SearchValueParagraph/SearchValueParagraph\";\nimport MealGrid from \"../../components/MealGrid/MealGrid\";\nimport MealDetails from \"../../components/MealDetails/MealDetails\";\nimport { connect } from \"react-redux\";\nimport {\n  setSearchField,\n  requestRandomMeal,\n  requestMeal,\n  requestViewMeal\n} from \"../../actions\";\nimport \"./App.css\";\n\nconst mapStateToPros = state => {\n  return {\n    searchField: state.searchMeals.searchField,\n    meals: state.requestMeal.meals,\n    randomMeal: state.requestMeal.randomMeal,\n    isPending: state.requestMeal.isPending,\n    error: state.requestMeal.error,\n    meal: state.requestViewMeal.meal\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestMeal: () => dispatch(requestMeal()),\n    onRequestRandomMeal: () => dispatch(requestRandomMeal()),\n    onRequestViewMeal: event =>\n      dispatch(requestViewMeal(event.target.getAttribute(\"data-id\")))\n  };\n};\n\nclass App extends Component {\n\n  render() {\n    const {\n      onRequestMeal,\n      searchField,\n      onSearchChange,\n      meals,\n      onRequestRandomMeal,\n      meal,\n      onRequestViewMeal\n    } = this.props;\n    return (\n      <div className=\"App\">\n        <Header />\n        <InputForm\n          onSearchChange={onSearchChange}\n          onMealSearch={onRequestMeal}\n          onRandomSearch={onRequestRandomMeal}\n        />\n        <SearchValueParagraph searchValue={searchField} meals={meals} />\n        <MealGrid meals={meals} viewMealDetails={onRequestViewMeal} />\n        {meal.name !== undefined ? <MealDetails mealDetails={meal} /> : null}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToPros, mapDispatchToProps)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_MEAL_PENDING,\n  REQUEST_MEAL_FAILED,\n  REQUEST_MEAL_SUCCESS,\n  REQUEST_RANDOM_MEAL_FAILED,\n  REQUEST_RANDOM_MEAL_PENDING,\n  REQUEST_RANDOM_MEAL_SUCCESS,\n  REQUEST_VIEW_MEAL_FAILED,\n  REQUEST_VIEW_MEAL_PENDING,\n  REQUEST_VIEW_MEAL_SUCCESS\n} from \"./constants\";\n\nexport const setSearchField = text => {\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  };\n};\n\nexport const requestMeal = () => (dispatch, getState) => {\n  const { searchField } = getState().searchMeals\n  dispatch({ type: REQUEST_MEAL_PENDING });\n  fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${searchField}`)\n    .then(resp => resp.json())\n    .then(data => {\n      dispatch({ type: REQUEST_MEAL_SUCCESS, payload: data.meals });\n    })\n    .catch(err => dispatch({ type: REQUEST_MEAL_FAILED, payload: err }));\n};\n\nexport const requestRandomMeal = () => (dispatch, getState) => {\n  dispatch({ type: REQUEST_RANDOM_MEAL_PENDING });\n  fetch(`https://www.themealdb.com/api/json/v1/1/random.php`)\n    .then(resp => resp.json())\n    .then(data =>\n      dispatch({ type: REQUEST_RANDOM_MEAL_SUCCESS, payload: data.meals })\n    )\n    .catch(err => dispatch({ type: REQUEST_RANDOM_MEAL_FAILED, payload: err }));\n};\n\nexport const requestViewMeal = mealID => dispatch => {\n  const id = mealID;\n  dispatch({ type: REQUEST_VIEW_MEAL_PENDING });\n  fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`)\n    .then(resp => resp.json())\n    .then(data =>\n      dispatch({ type: REQUEST_VIEW_MEAL_SUCCESS, payload: data.meals[0] })\n    )\n    .catch(err => dispatch({ type: REQUEST_VIEW_MEAL_FAILED, payload: err }));\n};\n","//CONST FOR SEARCH FIELD ACTION\nexport const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n//CONST FOR REQUEST MEAL ACITON\nexport const REQUEST_MEAL_PENDING = \"REQUEST_MEAL_PENDING\";\nexport const REQUEST_MEAL_SUCCESS = \"REQUEST_MEAL_SUCCESS\";\nexport const REQUEST_MEAL_FAILED = \"REQUEST_MEAL_FAILED\";\n//CONST FOR REQUEST RANDOM MEAL ACTION\nexport const REQUEST_RANDOM_MEAL_SUCCESS = \"REQUEST_RANDOM_MEAL_SUCCESS\";\nexport const REQUEST_RANDOM_MEAL_PENDING = \"REQUEST_RANDOM_MEAL_PENDING\";\nexport const REQUEST_RANDOM_MEAL_FAILED = \"REQUEST_RANDOM_MEAL_FAILED\";\n//CONST FOR REQUEST VIEW MEAL ACITON\nexport const REQUEST_VIEW_MEAL_PENDING = \"REQUEST_VIEW_MEAL_PENDING\";\nexport const REQUEST_VIEW_MEAL_SUCCESS = \"REQUEST_VIEW_MEAL_SUCCESS\";\nexport const REQUEST_VIEW_MEAL_FAILED = \"REQUEST_VIEW_MEAL_FAILED\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_MEAL_PENDING,\n  REQUEST_MEAL_SUCCESS,\n  REQUEST_MEAL_FAILED,\n  REQUEST_RANDOM_MEAL_FAILED,\n  REQUEST_RANDOM_MEAL_PENDING,\n  REQUEST_RANDOM_MEAL_SUCCESS,\n  REQUEST_VIEW_MEAL_FAILED,\n  REQUEST_VIEW_MEAL_PENDING,\n  REQUEST_VIEW_MEAL_SUCCESS\n} from \"./constants\";\n\n//reducer and inital state for setSearchField action\n\nconst initalStateSearch = {\n  searchField: \"\"\n};\n\nexport const searchMeals = (state = initalStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\n// reducer and initia; state for requestMeal action\n\nconst initalStateRequestMeal = {\n  isPending: false,\n  meals: [],\n  error: \"\"\n};\n\nexport const requestMeal = (state = initalStateRequestMeal, action = {}) => {\n  switch (action.type) {\n    case REQUEST_MEAL_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_MEAL_SUCCESS:\n      return Object.assign({}, state, {\n        isPending: false,\n        meals: action.payload\n      });\n    case REQUEST_MEAL_FAILED:\n      return Object.assign({}, state, {\n        isPending: false,\n        error: action.error\n      });\n    case REQUEST_RANDOM_MEAL_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_RANDOM_MEAL_SUCCESS:\n      return Object.assign({}, state, {\n        isPending: false,\n        meals: action.payload\n      });\n    case REQUEST_RANDOM_MEAL_FAILED:\n      return Object.assign({}, state, {\n        isPending: false,\n        error: action.error\n      });\n    default:\n      return state;\n  }\n};\n\n//reducer and inital state for the requestRandomMeal action\n\n// const initalStateRandomMeal = {\n//   isPending: false,\n//   randomMeal: [],\n//   error: \"\"\n// };\n// export const requestRandomMeal = (\n//   state = initalStateRandomMeal,\n//   action = {}\n// ) => {\n//   switch (action.type) {\n//     case REQUEST_RANDOM_MEAL_PENDING:\n//       return Object.assign({}, state, { isPending: true });\n//     case REQUEST_RANDOM_MEAL_SUCCESS:\n//       return Object.assign({}, state, {\n//         isPending: false,\n//         meals: action.payload\n//       });\n//     case REQUEST_RANDOM_MEAL_FAILED:\n//       return Object.assign({}, state, {\n//         isPending: false,\n//         error: action.error\n//       });\n//     default:\n//       return state;\n//   }\n// };\n///////////\n\n//reducer and initalstate for the requestViewMeal action\nconst initalStateViewMeal = {\n  meal: {},\n  isPending: false\n};\n\nexport const requestViewMeal = (state = initalStateViewMeal, action = {}) => {\n  switch (action.type) {\n    case REQUEST_VIEW_MEAL_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_VIEW_MEAL_SUCCESS:\n      const ingredientsArr = [];\n      for (let i = 1; i <= 20; i++) {\n        if (action.payload[`strIngredient${i}`]) {\n          ingredientsArr.push(\n            `${action.payload[`strIngredient${i}`]} - ${\n              action.payload[`strMeasure${i}`]\n            } `\n          );\n        }\n      }\n      return Object.assign({}, state, {\n        meal: {\n          name: action.payload.strMeal,\n          category: action.payload.strCategory,\n          area: action.payload.strArea,\n          photoSrc: action.payload.strMealThumb,\n          instructions: action.payload.strInstructions,\n          ingredients: ingredientsArr,\n          video: action.payload.strYoutube\n        },\n        isPending: false\n      });\n    case REQUEST_VIEW_MEAL_FAILED:\n      return Object.assign({}, state, { meal: {}, isPending: false });\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { Provider } from \"react-redux\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\nimport {\n  searchMeals,\n  requestMeal,\n  requestViewMeal\n} from \"./reducers\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({\n  searchMeals,\n  requestMeal,\n  requestViewMeal\n});\nexport const store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}